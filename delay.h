#ifndef DELAY_H
#define DELAY_H

//------------------------------------------------------------------------------
//             __             __   ___  __
//     | |\ | /  ` |    |  | |  \ |__  /__`
//     | | \| \__, |___ \__/ |__/ |___ .__/
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//      __   ___  ___         ___  __
//     |  \ |__  |__  | |\ | |__  /__`
//     |__/ |___ |    | | \| |___ .__/
//
//------------------------------------------------------------------------------

/*
infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0484c/CHDCICDF.html
//void DelayCycles(volatile U32 n){while(n--);}
00000320 <DelayCycles>: //uses 8 cycles on each loop iteration (on ARM Cortex M0+)
320:    b082          sub    sp, #8
322:    9001          str    r0, [sp, #4]
324:    9b01          ldr    r3, [sp, #4]                2 cycles (loop start)
326:    1e5a          subs    r2, r3, #1                1 cycle
328:    9201          str    r2, [sp, #4]                2 cycles
32a:    2b00          cmp    r3, #0                        1 cycles
32c:    d1fa          bne.n    324 <DelayCycles+0x4>    2 cycles (branch to start)
32e:    b002          add    sp, #8
330:    4770          bx    lr
*/
#define CYCLES_IN_DLYTICKS_FUNC (8)
#define F_CPU                   (48000000UL)
#define MS_TO_DLYTICKS(ms)      (uint32_t)(F_CPU / 1000 * ms / CYCLES_IN_DLYTICKS_FUNC) // ((float)(F_CPU)) / 1000.0
#define DelayTicks(ticks)       {volatile uint32_t n=ticks; while(n--);}//takes 8 cycles
#define DelayMs(ms)             DelayTicks(MS_TO_DLYTICKS(ms))//uses 20bytes

//------------------------------------------------------------------------------
//     ___      __   ___  __   ___  ___  __
//      |  \ / |__) |__  |  \ |__  |__  /__`
//      |   |  |    |___ |__/ |___ |    .__/
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//                __          __        ___  __
//     \  /  /\  |__) |  /\  |__) |    |__  /__`
//      \/  /~~\ |  \ | /~~\ |__) |___ |___ .__/
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//      __   __   __  ___  __  ___      __   ___  __
//     |__) |__) /  \  |  /  \  |  \ / |__) |__  /__`
//     |    |  \ \__/  |  \__/  |   |  |    |___ .__/
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//      __        __          __
//     |__) |  | |__) |    | /  `
//     |    \__/ |__) |___ | \__,
//
//------------------------------------------------------------------------------


#endif /* DELAY_H */
